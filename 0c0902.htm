<!DOCTYPE html>

<html>
<head>
<title>
DOITF030 - Tips u. Tricks zum Atari Falcon F030: Epromkarten am Romport
</title>
<meta charset="utf-8">


<link rel=home href="index.html" title="Homepage">
<link href="styles/style.css" rel="stylesheet">
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" alink="#FF0000" vlink="#800080">

<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0c09.htm" target="UDOcon"><img src="udo_up.gif" alt="Romport" border=0 width="24" height="24"></a>
<a href="0c0901.htm" target="UDOcon"><img src="udo_lf.gif" alt="Romportbuffer" border=0 width="24" height="24"></a>
<a href="0c0903.htm" target="UDOcon"><img src="udo_rg.gif" alt="Romport-Digitizer" border=0 width="24" height="24"></a>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr>
<td valign=top width="8">&nbsp;</td><td valign=top width="100%">
<h1><a name="Epromkarten_20am_20Romport">12.9.2 Epromkarten am Romport</a></h1>
<p align=center><img src="image/line.gif" border=0 width="637" height="6"></p><br>
<p><tt>Wissenswertes über Epromkarten am Atari-<a href="0c09.htm" target="UDOcon">Romport</a></tt>
<br>
</p>
<p><img src="image/deutsch.gif" border=0 width="35" height="22"></p><br>
<p>
<br>
</p>
<p>Als Einleitung sollte jedem klar sein das irgendwelche Basteleien
am <a href="0c09.htm" target="UDOcon">Romport</a> der Atari Computer sehr rasch auch schnell recht teuer
werden kann. An diesem Port liegen alle Bussignale des Rechner
ungepuffert an. Durch eine Unachtsamkeit, einen Kurzschluß
zwischen den einzelnen Pins der Portbuchse kann so der gesammte
Rechner zerstört werden. Als einzige Sicherheitsmaßnahme
existieren in zwei Atarimodellen Sicherungen die die +5 Volt Versorung
des Romports absichern. Das trifft hier einmal auf den Atari TT zu,
hier wird über die Microsicherung F1 abgesichert, zum anderen
betrifft es den Falcon der über die Microsicherung mit der
Bezeichung F2 (5Amp) gegen Kurzschlüsse der Versorgungsspannung
von außen geschützt wird. Keinen Schutz haben bei allen
Atari Computern alle anderen Signal- oder Steuerleitungen.
<br>
</p>
<p>Meiner Meinung nach kann die Sicherung eine Stärke von 0.5-1
Amp haben.
<br>Größere Sicherungen können unter anderem auch die
Leiterbahnen im inneren des Falcons zerstören. Das Falconnetzteil
kann ca. 3.5 Amp liefern, größere Sicherungen sind daher
eigentlich Unbrauchbar.
<br>Siehe <a href="0f01.htm" target="UDOcon">Netzteil</a>.
<br>
</p>
<p>Sollte z.B ein eingestecktes Scannermodul keine Funktion mehr
haben kann man beim TT und beim Falcon eben diese genannten
Sicherungen überprüfen. Die Bauteile befinden sich bei
beiden Computern jeweils in der Nähe der Romportbuchse. Das
Bauteil selber sieht in den meisten Fällen wie ein Widerstand
aus, und kann meistens auch nur am Platinenaufdruck bzw. der
Bauteilebezeichnung erkannt und gefunden werden. Diese sog.
'Microfuses' (engl.) sind nur durch Auslöten zu ersetzten. In
beiden Computern arbeitet ein axialer Typ den es in verschiedenen
Bauformen in jeden besseren Elektronikladen geben sollte. Beim Ersatz
sollte mit der üblichen Vorsicht im Rechner gelötet werden,
speziell im Falcon, da dieser eine 6fach Multilayerplatine hat und man
es daher hier auf kurze Lötzeiten anlegen sollte. Eine
Microsicherung mit 0.5 Amp reicht aus, das <a href="0f01.htm" target="UDOcon">Netzteil</a> im Falcon kann nie
mehr als 4Amp liefern, dazu reicht die Leistung leider nicht aus. Bei
einer 5 Amp-Sicherung können schnell irgendwelche Leiterbahnen
als Sicherung dienen. Sehr oft schlecht zu Reparieren.
</p>
<p>Im TT eines Freundes, Peter Küchler@OF2, sah ich einmal die
Anschlüsse dieser Microsicherung mit Drähten auf einen
normalen Feinsicherungshalter verlängert, der in der
Rückwand des TTs eingebaut war. Vorteil dieser Lösung ist
bei einem nächsten Ausfall dieser Sicherung das eben der Rechner
nicht mehr geöffnet werden muß und das umständliche
löten so Entfällt. Logischerweise werden hier dann auch die
billigen Glassicherungen zum Einsatz kommen.
</p>
<p>Lötzinnreste ect. sollte man Aufsammeln und nicht durch
wegblasen entfernen.
</p>
<p>Bei allen anderen Atarimodellen hilft bei einem Fehlerfall des
Romports meistens leider nur das Atari-<a href="030801.htm" target="UDOcon">Testkit</a> weiter. Testkits stehen
jedem Atari-<a href="1604.htm" target="UDOcon">Händler</a> mit Werkstatt zur Verfügung. Meistens
betrifft es leider einen relaiv teuren Baustein im Rechner. In einem
ST z.B meistens den GLUE.
</p>
<p>Am sichersten ist es in jedem Fall wenn man alle Erweitungen
für den <a href="0c09.htm" target="UDOcon">Romport</a> über ein Buffermodul betreibt. Die c't hatte
vor einigen Jahren einen '<a href="0c09.htm" target="UDOcon">Romport</a>-Expander' als Projekt in ihrem
Magazin. Die Schaltung des Romportexpander kann der c't 5/88 entnommen
werden. Sicherlich kann man bei e_Media auch eine Kopie des Artikels
bekommen, die Kosten hierfür lagen meines Wissens nach bei 5 DM
pro Artikel. Bei fertig gekauften Epromkarten ist das Risiko
wesentlich kleiner, ebenfalls aber nie ganz Auszuschließen. Das
Betrifft selbstgestrickte Epromkarten natürlich noch mehr. Schon
ein falsch eingestecktes Eprom kann bis auf den eigenen defekt des
Bausteils selber auch am Rechner einigen Schaden anrichten. Es ist
hier also Vorsicht geboten.
<br>
</p>
<p>Verschiedene Hersteller bieten also Epromkarten zum einstecken in
den <a href="0c09.htm" target="UDOcon">Romport</a> an. Diese Karten werden meistens ohne Eproms verkauft und
sind in vielen Fällen an mindestens 2 Sorten Eproms anpassbar.
Die entsprechenden Eproms müssen im gängingen
Elektronikhandel erstanden werden, zumal die hier meistens billiger
als bei Atarihändler zu bekommen sind. Auch hier macht die
Stückzahl den Preis, eine Sammelbestellung mit Freunden kann sich
also Auszahlen. Gut geeigent sind diese Epromkarten oder
Eprombänke um sich z.B das neue MagiC! 3 in Eproms zu brennen und
so einen wesentlich schnelleren Bootvorgang am Rechner zu erhalten.
Aus einem ROM (Eprom) liest es sich schneller als von einer Festplatte
oder einer Diskette. Epromkarten liegen im Adressraum von $FA0000 bis
$FBFFFF. Speziell für MagiC! gibt es in diversen Mausboxen eine
Software die ein vorhandenes MagiC! in eben brennfertige Files
für einen Epromer aufbereitet. Ein sehr guter Tip ist hier der
JuniorPrommer von Maxon mit z.B Pinatubo als Software. Pinatubo ist
ShareWare. Die von Maxon gelieferte Software läuft zwar auch hat
aber durch ihr Alter bedingt ein paar sehr lästige Eigenschaften
und sollte zur Sicherheit nur in einem ST-Monchrome-Modus auf z.B dem
Falcon benutzt werden. Ein Update währe hier also schon lange mal
überfällig.
</p>
<p>Hat man sich eine Karte besorgt sollte man sich auch gleich die
passenden Eproms dafür besorgen. Von Maxon gab es mal eine
Zeitlang die sog. Easybank, welche einen Epromspeicher von bis zu 576
Kbyte am Rechner zur Verfügung stellte. Natürlich gibt es
auch keine Karten mit 128Kbyte freiem Speicherplatz.
<br>Hier passt also schon eine ganze Menge an Software auf eine Karte,
bzw. in Eproms. Es sollte Klargestellt werden das sich hier nur
Software eignet die über keinen Kopierschutz verfügt und
auch nicht versucht während dem Betieb sich selber zu
Modifizieren. Das geht bei einem 'Rom'-Modul logischerweise daneben.
Aus diesen Karten kann also nur gelesen werden um eine Kopie davon im
Ramspeicher anzulegen. (R)ead (O)nly (M)emory
<br>Der Rechner stellt durch 'lesen' des des ersten Langwortes ab
$FA0000 fest ob eine Karte vorhanden ist. Kleinere Epromkarten
arbeiten mit 2 oder 4 Eproms. Größere Karten haben in den
meisten Fällen zwei extra Steuereproms mit drauf. Hier liegen
Daten für den Computer die Ihm einen Zugriff auf eben mehr wie
128Kbyte ermöglichen. Normalerweise kann ein Rom- oder Eprommodul
am Atari <a href="0c09.htm" target="UDOcon">Romport</a> nur 128Kbyte groß sein. Größere
Karten werden mit dem sog. Bankswitching dazu überredet korrekt
zu arbeiten. Bei diesem Verfahren verschiebt die Steuersoftware ein
Fenster das genau 128Kbyte groß ist über den wesentlich
grösseren Epromspeicher auf der Karte. Der Rechner bekommt bei
dieser Arbeitsweise immer nur 128Kbyte zu sehen und ist Zufrieden.
Also ein relativ guter Trick um große Karten zu Betreiben.
Zusätzlich dazu haben die großen Karten meistens dafür
auch noch eine Adresslogik on Board die eben auch mit den Daten aus
den beiden Steuereproms bedient wird.
<br>
</p>
<p>Nun lassen sich eben solche Rom- oder Eprommodule natürlich
nicht nur dazu verwenden um irgendwelche Programme darauf zu vebannen.
Die Fa. Atari hat für diesen Zeck z.B eine eigene Testsoftware
für ihre Rechner entwickelt die eben einfach auch auf einem sog.
Testmodul über den <a href="0c09.htm" target="UDOcon">Romport</a> mit eben dem Rechner verbunden wird.
Atari benutzt hier eine Karte mit zwei Eproms vom Typ 27C256. (Alte
ST-Testmodule) Darin enthalten ist eine Testsoftware die direkt vor
dem TOS gestartet wird. Bereits mit 1Kb funktionierendem Ram kann man
hier seinen Rechner auf relativ einfache Art testen.
<br>
</p>
<p align=center><img src="image/epboard.gif" border=0 width="290" height="160"></p><br>
<div align=center><tt>Abbildung 1 - Eine einfache Epromkarte für den
<a href="0c09.htm" target="UDOcon">Romport</a></tt>
</div>
<p>Auch lassen sich natürlich komplette Bootlaufwerke auf solch
einer Karte speichern. Selbst größere Applikationen lassen
sich so bequem auf einer Epromkarte ablegen. Die auf einer solchen
Steckkarte enthaltenen Programme werden beim Anklicken praktisch in
Nullzeit in den Arbeitsspeicher übertragen und ausgeführt.
Die Zeitersparniss liegt klar auf der Hand.
</p>
<p>Gut geeignet scheinen hier Kopierprogramme, Diskettenmonitore oder
die sog. Tracer zu sein, alle diese Programm werden nur geladen und
schreiben nicht auf ihr eigenens Laufwerk Daten zurück. Einige
Spezialisten haben hier Software untergebracht die auf Kopfdruck in
der Lage ist laufende Programme zu Unterbrechen, zu Modifizieren oder
auch den gesammten Speicherinhalt auf eine Diskette schreiben zu
können. Wozu man das macht und wozu man das Einsetzen kann
möge sich jeder selber an der Nase abfingern. Mir dient das
jedenfalls hier ebenfalls als Einsatzbeispiel. Um vorhandene Software
auf solche Epromkarten zu bringen sind einige durchdachte
Arbeitsschritte notwendig.
</p>
<p>An erster Stelle im ersten Eprom auf einer solchen Karte sollte
die Magicnumber stehen, die wie folgt aussieht:
<br>$ABCDEF42
<br>An dieser Nummer erkennt der Rechner das es sich um ein
ausführbares Programm, bzw. das es sich um ein Programmodul
handelt. Ein Testmodul trägt hier logischerweise eine andere
Magicnumber. Sollte also an dieser Stelle z.B:
<br>$FA522255F
<br>stehen wird der Rechner weder das GEM noch das AES laden bzw.
Initalisieren da er davon ausgeht das ein eben ein Testmodul im
<a href="0c09.htm" target="UDOcon">Romport</a> steckt. Ein eingestecktes Testmodul bewirkt auch keinerlei
Bootvorgang oder ähnliches von den vorhandenen Datenträgern.
Beim Falcon/TT wird zusätzlich sofort auch das <a href="040101.htm" target="UDOcon">NVRAM</a>
gelöscht. Der Rechner arbeitet dann mit den
Default-Werkseinstellungen. Später kann man diese Einstellungen
mit einem geeigeten Setup-Programm mit eigenen Daten wieder
überschreiben. Das auf einer Karte enthaltene Programm
enthält in der Regel ein Monitorprogramm, einen Tracer oder eben
eine Testsoftware für das 680xxer Rechnersystem. Andere Programme
währen zu diesem Zeitpunkt auch ziemlich Sinnlos. Wenn auf ein
solches 'Eprom-Programmodul' eines oder auch mehrere (je nach
größe) Programme aufgebracht werden, wird noch ein sog.
Header benötigt, der sich Unbedingt ab der Adresse $FA0004 finden
sollte. (Adress-Offset) Ansonsten fliegen diverse Bömbchen.. :-)
<br>
</p>
<p>Die eigentliche Reihenfolge: Zuerst kommt die magische Nummer
gefolgt von &quot;$00000000&quot; wenn kein weiters Programm in dem
Modul enthalten ist. Die nächste Langwortadresse sollte den
Initialisierungscode enthalten, denn das System benötigt
Informationen über das Programm. Auch wird hier festgelegt wann
und wo das System in welche Routine springt. Der genaue Zeitpunkt wird
durch das hochwertigste Bit bestimmt:
<br>
</p>
<pre>
 TABELLE:

 0 -  Routine wird vor allem anderen gestartet. (Testmodul)
 1 -  Ausführen vor dem Starten von GEM.
 3 -  Bit 3 erzeugt auch einen Start vor dem GEM, allerdings nur bei
      Computern ohne RomTos.
      (Gab es nur bei den ersten STs)
 5 -  Es handelt sich um ein .ACC
 6 -  Es handelt sich um eine .TOS Anwendung
 7 -  Bit 7 legt fest, das es sich um eine .TTP-Anwendung handelt, welche
      zum Betrieb noch Parameter benötigt.

</pre>
<p><tt>Headerinformationen:</tt>
<br>
</p>
<dl>
<dt><b>$FA0018</b></dt><dd> Der korrekte Programmname.
<br>&nbsp;
<dt><b>$FA0008</b></dt><dd> Das Programminit sowie der Zeiger!
<br>&nbsp;
<dt><b>$FA0014</b></dt><dd> Die komplette Programmlänge.
<br>&nbsp;
<dt><b>$FA0004</b></dt><dd> Der gesammte Programmkopf sowie dessen Zeiger!
<br>&nbsp;
<dt><b>$FA0012</b></dt><dd> Das Erstellungsdatum.
<br>&nbsp;
<dt><b>$FA0000</b></dt><dd> Hier steht das &quot;magische&quot; Langwort des Moduls.
<br>&nbsp;
<dt><b>$FA0010</b></dt><dd> Die Erstellungszeit (Uhrzeit) des Programmmoduls.
<br>&nbsp;
<dt><b>$FA000C</b></dt><dd> Die Anfangsadresse / Programmanfang.
<br>&nbsp;
</dl>
<p>An der Adresse des nächsten Langwortes steht dann die
Startadresse des eigentlichen Programmcodes. An den beiden danach
folgenden Worten (keine Langwörter) können dann auch noch
Datum und die Uhrzeit enthalten sein. Das Langwort zum Schluß
enthält die gesamte Programmlänge in Bytes. Der nachfolgende
String sollte dann noch den kompletten Programmnamen enthalten, den
Stringabschluß veranstaltet dann ein &quot;$00&quot;. Das ist
alles dringend Notwendig um zu erkennen um wieviele Programme und um
welche Art von Programmen es sich handelt.
</p>
<p>Um die Sache zu vereinfachen, bieten manche Hersteller von
Epromern in ihrer Software bereits eine vorgefertigte 'Modulsoftware'
an. Beim JuniorPrommer oder z.B bei der Easybank ist diese Software in
beiden Fällen vorhanden. Damit ist es wesentlich einfacher sich
selber Module zu erzeugen und eigene Programmdateien in Epromms zu
brennen.
</p>
<p>Im übrigen ist man mit einem solchen &quot;Epromer&quot; auch
leicht in der Lage sich Betriebssystempatches in eben das ROM des
Rechners zu &quot;brennen&quot; Das lästige Ladem im Autoorder
würde dann entfallen.
</p>
<p>Hierzu die verschiedenen ROM/Eproms aus Atari Computern:
</p>
<dl>
<dt><b>TOS 1.0</b></dt><dd> TOS 1.0 bis 1.4 sind 192k Roms (196608 Bytes)
<br>&nbsp;
<dt><b>TOS 1.06</b></dt><dd> TOS 1.06 bis 1.62 sind 256k Roms (262144 Bytes)
<br>&nbsp;
<dt><b>TOS 2.x</b></dt><dd> TOS 2.06 bis 3.x sind 512k Roms (524288 Bytes)
<br>&nbsp;
<dt><b>TOS 4.x</b></dt><dd> TOS 4.0x passt bisher nur in 512K PLCC-OPTRoms / -Eprom (524288
Bytes)
<br>&nbsp;
<dt><b>TOS 0.xx</b></dt><dd> Die beiden Bootroms vom 520/260ST sind 32k lang und 2 Roms 28p
(Bootrom)
<br>&nbsp;
<dt><b>1.00</b></dt><dd> 192k / 6 Roms 28p
<br>&nbsp;
<dt><b>1.02</b></dt><dd> 192k / 2 Roms 28p
<br>&nbsp;
<dt><b>1.04</b></dt><dd> 192k / 2 Roms 28p
<br>&nbsp;
<dt><b>1.06</b></dt><dd> 192k / 2 Roms 28p
<br>&nbsp;
<dt><b>1.062</b></dt><dd> 192k / 2 Roms 28p
<br>&nbsp;
<dt><b>2.06</b></dt><dd> 256k / 2 Roms 32p
<br>&nbsp;
<dt><b>3.0x</b></dt><dd> 512k / 4 Roms 32p (TT only)
<br>&nbsp;
<dt><b>4.0x</b></dt><dd> 512k / 1 Rom PLCC 44p (Falcon only)
<br>&nbsp;
</dl>
<p>Das nur als Randbemerkung und Beispiel.
</p>
<p>Quelle: Profibuch/<a href="15.htm" target="UDOcon">Internet</a>
</p>
<p>Leider ist die Benutzung von mehreren Rom-Modulen an den Atari
Rechner nicht ganz unproblematisch. Die Federleiste welche den
herrausgeführten Stecker bildet verkraftet nicht ohne weiteres
das andauernde Umstecken der verschiedenen Karten. Auch sollte ein
Kartenwechsel dringlichst nur bei ausgeschaltetem Computer
stattfinden! Die Kontaktfedern sind nach ca. 1 Jahr so ausgeleiert das
eine richtige Kontaktgabe nicht mehr immer gewährleistet ist. Die
Folge davon sind häufige 'Abstürze' oder selbstständige
'Resets' des Rechners. Was nur durch einen geziehlten Austausch der
<a href="0c09.htm" target="UDOcon">Romport</a>-Buchse richtig und Dauerhaft behoben werden kann. Kontaktspray
o.ä sind hier eher Schädlich.
</p>
<p>Nicht ganz Unwichtig ist die Zugriffszeit der verwendeten Eproms.
Eproms mit einer Zugriffszeit von 200nS sollen wirklich das untere
Maximum darstellen! Besser ist es hier auf 100-150 nS Zugriffszeit
auszuweichen. Langsamer als 200 nS behindern den Datentransfer von
Modul zum Atari, in Abhängigkeit des Rechner internen Timings!
Auch nach vielen Löschvorgängen mit dem beliebten UV-Licht
aus der Löschlampe steigt die Zugriffszeit der Eproms!
</p>
<p>Auch wenn das nicht jeder Wahrhaben möchte! Eproms altern.
Schneller noch durch häufiges löschen. Die Zugriffszeit
steigt dabei an.
</p>
<p>Wird eine Modul- oder Epromkarte nicht mehr Korrekt oder
überhaupt nicht mehr Erkannt sollte man zuerst im Falle dieses
Fehlers zuerst die beiden Steuerleitungen ROM 3+4 auf ihre Funktion
hin überprüfen. Die Leitungen sind LOW aktiv, d.h beim
Ansprechen per Software sollte sich hier etwas tun. Auch könnte
die Verschmutzung einiger Kontaktfedern vorliegen, da sich durch
häufiges Umstecken von den Leiterplatinen immer wieder kleine
Partikel der Verzinnten oder vergoldeten Steckflächen lösen
und eben an den Kontaktfedern haften bleiben. Mit der Zeit bildet sich
so ein regelrechter schwarzer Schmutzfilm, der sich jedoch mit einem
einfachen Schul-Radiergummi leicht abradieren lässt. Ein wenig
Spiritus eignet sich auch, lässt aber den Kunststoff schneller
altern. (Die Weichmacher lösen sich durch die Dämpfe aus dem
Plastik, das Material wird Spröde und bricht dann sehr schnell)
</p>
<p>Sollte es dann noch immer zu Ausetzern kommen ist auch das leichte
nachbiegen der Kontaktfedern erlaubt, sicherer ist allerdings immer
der Austausch der gesammten <a href="0c09.htm" target="UDOcon">Romport</a>-Buchse. Diese <a href="0c09.htm" target="UDOcon">Romport</a>-Buchsen sind
leider schwer Aufzutreiben.
<br>
</p>
<p align=center><img src="image/romport.gif" border=0 width="600" height="170"></p><br>
<div align=center><tt>Abbildung 2 - Die Pinbelegung des 40 poligen <a href="0c09.htm" target="UDOcon">Romport</a> aus der
ST Dokumentation:</tt>
</div>
<p>- <a href="0302.htm" target="UDOcon">Falcon F030</a> von der linken Seite gesehen.
<br>- Midi Buchsen
<br>- <a href="0c09.htm" target="UDOcon">Romport</a>
<br>- Paddle Ports
<br>
</p>
<dl>
<dt><b>Pin 1=</b></dt><dd> +5V Versorgungsspannung
<br>&nbsp;
<dt><b>Pin 2=</b></dt><dd> +5V Versorgungsspannung
<br>&nbsp;
<dt><b>Pin 3=</b></dt><dd> Datenleitung 14 (D14)
<br>&nbsp;
<dt><b>Pin 4=</b></dt><dd> Datenleitung 15 (D15)
<br>&nbsp;
<dt><b>Pin 5=</b></dt><dd> Datenleitung 12 (D12)
<br>&nbsp;
<dt><b>Pin 6=</b></dt><dd> Datenleitung 13 (D13)
<br>&nbsp;
<dt><b>Pin 7=</b></dt><dd> Datenleitung 10 (D10)
<br>&nbsp;
<dt><b>Pin 8=</b></dt><dd> Datenleitung 11 (D11)
<br>&nbsp;
<dt><b>Pin 9=</b></dt><dd> Datenleitung 8 (D 8)
<br>&nbsp;
<dt><b>Pin 10=</b></dt><dd> Datenleitung 9 (D 9)
<br>&nbsp;
<dt><b>Pin 11=</b></dt><dd> Datenleitung 6 (D 6)
<br>&nbsp;
<dt><b>Pin 12=</b></dt><dd> Datenleitung 7 (D 7)
<br>&nbsp;
<dt><b>Pin 13=</b></dt><dd> Datenleitung 4 (D 4)
<br>&nbsp;
<dt><b>Pin 14=</b></dt><dd> Datenleitung 5 (D 5)
<br>&nbsp;
<dt><b>Pin 15=</b></dt><dd> Datenleitung 2 (D 2)
<br>&nbsp;
<dt><b>Pin 16=</b></dt><dd> Datenleitung 3 (D 3)
<br>&nbsp;
<dt><b>Pin 17=</b></dt><dd> Datenleitung 0 (D 0)
<br>&nbsp;
<dt><b>Pin 18=</b></dt><dd> Datenleitung 1 (D 1)
<br>&nbsp;
<dt><b>Pin 19=</b></dt><dd> Adressleitung 13 (A13)
<br>&nbsp;
<dt><b>Pin 20=</b></dt><dd> Adressleitung 15 (A15)
<br>&nbsp;
<dt><b>Pin 21=</b></dt><dd> Adressleitung 8 (A 8)
<br>&nbsp;
<dt><b>Pin 22=</b></dt><dd> Adressleitung 14 (A14)
<br>&nbsp;
<dt><b>Pin 23=</b></dt><dd> Adressleitung 7 (A 7)
<br>&nbsp;
<dt><b>Pin 24=</b></dt><dd> Adressleitung 9 (A 9)
<br>&nbsp;
<dt><b>Pin 25=</b></dt><dd> Adressleitung 6 (A 6)
<br>&nbsp;
<dt><b>Pin 26=</b></dt><dd> Adressleitung 10 (A10)
<br>&nbsp;
<dt><b>Pin 27=</b></dt><dd> Adressleitung 5 (A 5)
<br>&nbsp;
<dt><b>Pin 28=</b></dt><dd> Adressleitung 12 (A12)
<br>&nbsp;
<dt><b>Pin 29=</b></dt><dd> Adressleitung 11 (A11)
<br>&nbsp;
<dt><b>Pin 30=</b></dt><dd> Adressleitung 4 (A 4)
<br>&nbsp;
<dt><b>Pin 31=</b></dt><dd> ROM-Selekt 3
<br>&nbsp;
<dt><b>Pin 32=</b></dt><dd> Adressleitung 3 (A 3)
<br>&nbsp;
<dt><b>Pin 33=</b></dt><dd> ROM-Selekt 4
<br>&nbsp;
<dt><b>Pin 34=</b></dt><dd> Adressleitung 2 (A 2)
<br>&nbsp;
<dt><b>Pin 35=</b></dt><dd> UpperDataStrobe (UDS)
<br>&nbsp;
<dt><b>Pin 36=</b></dt><dd> Adressleitung 1 (A 1)
<br>&nbsp;
<dt><b>Pin 37=</b></dt><dd> LowerDataStrobe (LDS)
<br>&nbsp;
<dt><b>Pin 38-40=</b></dt><dd> GND (Ground)
<br>&nbsp;
</dl>
<p>Diese Pinbelegung, die aus einigen Fachbüchern stammt, passt
bis heute zu jedem Atari Computer mit eben diesem <a href="0c09.htm" target="UDOcon">Romport</a> Lediglich
beim Falcon werden einige Signale auf eine andere Weise im COMBEL
erzeugt. ältere Module, z.B Melody-Maker können nicht
funktionieren da das <a href="030503.htm" target="UDOcon">Timing</a> am Falcon-<a href="0c09.htm" target="UDOcon">Romport</a> mit 16Mhz abläuft.
Zu schnell für alte Modul-Software.
<br>
</p>
<p>Bitte beachten Sie das am <a href="0c09.htm" target="UDOcon">Romport</a> an bisher allen Atari-Computern
keinerlei Schutzeinrichtung gegen falsches Einstecken oder
überlasten der Signale gegeben ist.
<br>Ein versehentlich falsch eingestecktes Modul kann den Falcon sowie
jeden anderen Atari-Computer, das Modul, dauerhaft beschädigen.
Der COMBEL-Chip im Falcon kostet ca. 160.-DM +MwSt und ist noch nicht
Eingebaut! <a href="030805.htm" target="UDOcon">Ersatzteile</a>: C302995-001 / C-LAB: AT4181 208P
</p>
<p>Im einfachsten Fall wird die Sicherung F2 zerstört.
<br>(Kurzschluß der 5V Versorgungsspannung)
</p>
<p>Verwenden Sie bei Bastelarbeiten möglichst einen
<a href="0c09.htm" target="UDOcon">Romport</a>-Buffer!
<br>
</p>
<dl>
Zum Programmieren der Karten bzw. der Eproms gibt es einige Wege und
Möglichkeiten. Die Easybank von Maxon kann man z.B in der
folgenden Art bestücken:
<br>&nbsp;
<dt>&nbsp;</dt><dd> <tt>Steuereproms:</tt> 2 Stück 27C256 (64Kb)
<br>&nbsp;
<dt>&nbsp;</dt><dd> <tt>Dateneproms :</tt> 8 Stück 27C256 (256Kb)
<br>&nbsp;
<br>Ergibt eine Kapazität von 230Kbyte für den Benutzer.
Oder man Bestückt wie folgt mit:
<br>&nbsp;
<dt>&nbsp;</dt><dd> <tt>Steuereproms:</tt> 2 Stück 27C256 (64Kb)
<br>&nbsp;
<dt>&nbsp;</dt><dd> <tt>Dateneproms :</tt> 8 Stück 27C512 (512Kb)
<br>&nbsp;
<br>Würde dann eine Kapazität von eben 576 Kbyte ergeben.
<br>
<br>&nbsp;
</dl>
<p>Hier passt dann schon eine ganze Menge hinein. Zu Bemerken ist
noch das bei der Easybank in den Steuereproms nicht der gesammte Platz
verbraucht wird. Auf der Epromkarte selber befindet sich eine kleine
Steuerlogik die mit ca. 10Kbyte Anweisung aus beiden Steuereproms
auskommt. Der gesammte Rest in diesen beiden Eproms steht somit
ebenfalls dem Benutzer zur freien Verfügung. Kleinere Karten, mit
nur 4 Eproms haben keine Steuerlogik, das wird von der Modulsoftware
des Epromers übernommen und am Anfang des Epromspeichers zusammen
mit der Anwendersoftware eingebrannt.
</p>
<p>Bei kleinen Karten werden nur vier Stück vom gleichen Typ
benötigt, also hier meistens: 4 Stück 27C512, oder 4
Stück 27C256 Allenfalls bei sehr kleinen Karten kommen auch noch
27C128 zum tragen.
</p>
<p>Zu Bemerken währe das man bei den Eproms immer die CMos
Ausführungen beschaffen sollte, die sind wesentlich sparsamer im
Energieverbrauch und somit in der Belastung des Rechners freundlicher.
Fast alle CMos-Eproms sind mit einer Programmierspannung von 12.5 V
zufrieden. Höher eingestelle Spannungen zerstören die
Bausteine. Auf jeder Epromkarte sind die Eproms in gerade und ungerade
Adressen aufgeteilt. Daher erscheinen auf den Platinen meistens
Bezeichungen wie 4U, 3U oder 4L und 3L Wobei 'U' für 'Upper' und
'L' für 'Lower' steht. Im Klartext, 4U bedeutet das Eprom 4 High
und 3L steht für das Eprom 3 unten, also mit LOW-Inhalt. Alle
'kleinen' Eproms sind 8 Bit breit Organisiert. Eine Epromkarte aber
16Bit breit. Wie geht das?
</p>
<p>Die in solche Eproms/Karten zu brennende Software wird also mit
der Prommersoftware in 'High' und 'Low' geteilt.
</p>
<p>Wobei Low 'ungerade Adressen' High hingegen 'gerade Adressen
bedeutet. Auf der Karte hingegen 'sieht' der Computer die vollen
16Bit, die Software wird aus dem High- und Low-Eprom in einem Rutsch
gelesen.
</p>
<p>Leute die ihren Computer auch noch nach Jahren im orignalen
Gehäuse betreiben sollten bedenken das z.B gerade bei den alten
STs das Rechnernetzteil durch eine große Eprombank
zusätzlich belastet wird. Eine Karte mit 500KB Epromspeicherplatz
zieht am +5 V Anschluß des Netzteiles ohne weiteres bis zu 400mA
die eben dieses <a href="0f01.htm" target="UDOcon">Netzteil</a> zusätzlich noch aufbringen muß.
Eine schnelle und sichere Abhilfe ist es die Epromkarte eben über
ein 5V-Steckernetzteil zu betreiben. Hier zu wird an einer geeigneten
Stelle auf der Karte die +5V Versorung vom Rechner her einfach
aufgetrennt. Die Masseverbindung (GND) sollte allerdings hierbei
bestehen bleiben, GND dient hier gleichzeitig als Signalmasse ohne die
nichts läuft. Viele Karten haben auch genau für diesen Zweck
einen Jumper mit dem man von 'intern' auf eine 'externe'
Stromversorgung umstecken kann. Weitere Jumper auf der Karte sind
zumeist für den Epromtyp der auf der Karte eingesetzt werden
soll, auch kann es z.B einen Jumper geben mit dem man die Karte quasi
Abschalten kann. Sie ist dann für den Rechner unsichtbar obwohl
die Karte im <a href="0c09.htm" target="UDOcon">Romport</a> stecken bleiben kann. Eine gute Art die
Portkontakte zu schonen.
</p>
<p>Wie Eingangs schon Erwähnt wurde bei manchen Karten, so z.B
auch bei dem JuniorPrommer, eine sog. 'Modulsoftware' mitgeliefert.
Der Benutzer hat eigentlich nichts weiter zu tun als die Programme die
auf einer Karte arbeiten sollen auf einem geeigneten Datenträger
bereit zu halten. I.d.R ist das eine Ramdisk die in ihrer
größe sehr genau dem Platz in eben 2,4 oder mehreren Eproms
entspricht. Die gesammten zu brennenden Daten werden in die eben
eingerichtete Ramdisk kopiert, danach ist ein Laufwerk anzugeben unter
dem der Computer später die Daten/Epromkarte finden soll.
Sinnvoll ist es gleich danach auf dem <a href="030505.htm" target="UDOcon">Desktop</a> das passende Icon zu
installieren. Oder auch diese so geänderte
DESKTOP.INF/NEWDESK.INF mit auf die Karte zu brennen. Die
'Modulsoftware' wird den Inhalt der Ramdisk zusammenfassen und
entsprechend der Anzahl der verwendeten Eproms bzw. des nötig
werdenen Platzes in eben brennfertige Files aufsplitten. Wenn das
gelaufen ist erhält man eine oder mehrere Dateien die eben den
Inhalt der Ramdisk darstellt. Die Namen sind i.d.R default auf z.B
'ROM.EP1', 'ROM.EP2' usw. benannt worden. Hierdurch sollte die
Möglichkeit des Vertauschens klein gehalten werden. Diese Dateien
beinhalten nun jeweils die Daten für ein High und ein Low Eprom.
Diese Datei wird nun in die Steuersoftware des Epromers geladen, und
dort in High und Low gesplittet. Beim JuniorPrommer gibt es die
Einstellungsmöglichkeiten 'gerade' und 'ungerade' Adressen. Je
nach der Einstellung brennt man dann aus z.B dem File
&quot;ROM.EP1&quot; jeweils ein 'H' und ein 'L' Eprom. Bei mehreren
&quot;ROM.EPx&quot; Files sollten die Eproms dann mit H1, H2 oder L1,
L2 usw. Beschriftet werden. Das ist meistens von der bereits auf der
Karte vergebenen Beschriftung abhänging. Sollten die Eproms
vertauscht werden, so z.B 'H' mit 'L' oder z.B 'H1' mit 'L1' wird die
Karte unter keinen Umständen funktionieren! Hier kann beim
Arbeiten also eine gewisse Umsicht und/oder Reihenfolge sehr von
Nutzen sein. Wer will schon Stundenlang Eproms auf Verdacht umstecken.
</p>
<p>Eindringlich sei hier noch mal Erwähnt das Eproms mit einer
Zugriffszeit von mehr als 200nS funktionieren können, das aber
auf keinen Fall auch immer tun müssen. Bei Zugriffsproblemen wird
der Fehler i.d.R sicher immer zuerst hier zu suchen sein. Und
Logischerweise, wie bei allem, ist auf das korrekte einsetzen der
Eproms und auf das richtige Einstecken der Karten in den <a href="0c09.htm" target="UDOcon">Romport</a> zu
achten. Ebenfalls darf keine 'High' oder 'Low' Position vertauscht
sein. Beachtet man diese kleinen Regeln wird man sicher eine lange
Zeit viel Freude an einem sonst brachliegendem Medium haben. Für
einen längeren Gebrauch ist ein passendes Gehäuse für
eine solche Karte nicht schlecht, es sammelt sich so kein Staub auf
den Bauteilen, und es kann nichts passieren wenn beim 'hantieren' mal
eine Schraube herrunterfällt ;-) Geeignete Gehäuse wurden
bei 128er Karten teilweise mitgeliefert, für eine
größere Karte sollte man sich im Fachhandel umsehen. Eine
mechanische Bearbeitung eines solchen Kunststoffgehäuses ist
allerdings leider nicht ganz zu vermeiden.
<br>
<br>
</p>



<hr>

</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0c09.htm" target="UDOcon"><img src="udo_up.gif" alt="Romport" border=0 width="24" height="24"></a>
<a href="0c0901.htm" target="UDOcon"><img src="udo_lf.gif" alt="Romportbuffer" border=0 width="24" height="24"></a>
<a href="0c0903.htm" target="UDOcon"><img src="udo_rg.gif" alt="Romport-Digitizer" border=0 width="24" height="24"></a>
</td></tr></table>
</body></html>
