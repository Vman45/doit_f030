<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- last modified on 23.12.2003 -->
<html>
<head>
<title>
DOITF030 - Tips u. Tricks zum Atari Falcon F030: MFP Chip
</title>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<meta name="Generator" content="UDO6 PL14 for TOS">
<meta name="Email" content="support@doitarchive.de">
<link rev=made href="mailto:support@doitarchive.de" title="E-Mail">
<link rel=home href="doitf030.htm" title="Homepage">
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" alink="#FF0000" vlink="#800080">

<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0401.htm" target="UDOcon"><img src="udo_up.gif" alt="Falcon Custom Chip" border=0 width="24" height="24"></a>
<a href="040103.htm" target="UDOcon"><img src="udo_lf.gif" alt="VIDEL Chip" border=0 width="24" height="24"></a>
<a href="040105.htm" target="UDOcon"><img src="udo_rg.gif" alt="DSP Chip" border=0 width="24" height="24"></a>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr>
<td valign=top width="8">&nbsp;</td><td valign=top width="100%">
<h1><a name="MFP_20Chip">4.1.4 MFP Chip</a></h1>
<p align=center><img src="image/line.gif" border=0 width="637" height="6"></p><br>
<p><tt> Der MFP 68901 im F030 </tt>
<br>
<br>
</p>
<p><img src="image/deutsch.gif" border=0 width="35" height="22"></p><br>
<p><img src="image/english.gif" border=0 width="35" height="22"></p><br>
<p>
<br>MFP ist eine Abk&uuml;rzung, hinter der sich das folgende
&quot;Langwort&quot; Multi-Funktion-Peripheral-Baustein versteckt. was
auch nicht gelogen ist. Dieses IC ist ein kleines Wunderwerk, in dem
sich einige Funktionen verstecken.
<br>
</p>
<p>- 8 Bit Parallelport - Datenrichtung eines Portbits separat
Programmierbar - Verwendung eines Portbits als Interrupteingang (siehe
ST) - verschiedene Interruptquellen - Vier programmierbare universal
Timer und eine serielle Schnittstelle
</p>
<p>Diese Funktionen sind nun alle in einem Geh&auml;use
untergebracht, das dieses etwas Platz beansprucht f&auml;llt dann an
dem 52 poligen Baustein schnell auf. Ich will an dieser Stelle
f&uuml;r die mehr <a href="0305.htm" target="UDOcon">Hardware</a> orientierten Freaks auch die komplette
Pinbelegung dieses und des MFP-Bausteines des alten ST ablichten. So
werden die Unterschiede am deutlichsten.
<br>
</p>
<p><b> Pinbelegung des MFP im ST und im <a href="0302.htm" target="UDOcon">Falcon F030</a> </b>
<br>Der MFP im ST befinden sich im 48 Pin DIL-Geh&auml;use. Der MFP im
Falcon besitzt hingegen ein 52 poliges PLCC-Geh&auml;use!
</p>
<p>
<br>
</p>
<div align=center><table border=1 frame=box>
<caption align=bottom>Tabelle 3: Die MFP-Pinbelegung</caption>
<tr>
  <td align=left valign=top>PIN</td>
  <td align=left valign=top>FUNKTION ST</td>
  <td align=left valign=top>FALCON</td>
  <td align=left valign=top>PIN</td>
  <td align=left valign=top>FUNKTION ST</td>
  <td align=left valign=top>FALCON</td>
</tr>
<tr>
  <td align=left valign=top></td>
  <td align=left valign=top></td>
  <td align=left valign=top></td>
  <td align=left valign=top></td>
  <td align=left valign=top></td>
  <td align=left valign=top></td>
</tr>
<tr>
  <td align=left valign=top></td>
  <td align=left valign=top></td>
  <td align=left valign=top></td>
  <td align=left valign=top>52</td>
  <td align=left valign=top>-</td>
  <td align=left valign=top>CS</td>
</tr>
<tr>
  <td align=left valign=top>1</td>
  <td align=left valign=top>R/W</td>
  <td align=left valign=top>NC</td>
  <td align=left valign=top>51</td>
  <td align=left valign=top>-</td>
  <td align=left valign=top>DS</td>
</tr>
<tr>
  <td align=left valign=top>2</td>
  <td align=left valign=top>A1</td>
  <td align=left valign=top>RXW</td>
  <td align=left valign=top>50</td>
  <td align=left valign=top>-</td>
  <td align=left valign=top>DTACK</td>
</tr>
<tr>
  <td align=left valign=top>3</td>
  <td align=left valign=top>A2</td>
  <td align=left valign=top>RS1</td>
  <td align=left valign=top>49</td>
  <td align=left valign=top>-</td>
  <td align=left valign=top>IACK</td>
</tr>
<tr>
  <td align=left valign=top>4</td>
  <td align=left valign=top>A3</td>
  <td align=left valign=top>RS2</td>
  <td align=left valign=top>48</td>
  <td align=left valign=top>CS</td>
  <td align=left valign=top>D7</td>
</tr>
<tr>
  <td align=left valign=top>5</td>
  <td align=left valign=top>A4</td>
  <td align=left valign=top>RS3</td>
  <td align=left valign=top>47</td>
  <td align=left valign=top>DS</td>
  <td align=left valign=top>D6</td>
</tr>
<tr>
  <td align=left valign=top>6</td>
  <td align=left valign=top>A5</td>
  <td align=left valign=top>RS4</td>
  <td align=left valign=top>46</td>
  <td align=left valign=top>DTACK</td>
  <td align=left valign=top>D5</td>
</tr>
<tr>
  <td align=left valign=top>7</td>
  <td align=left valign=top>TC</td>
  <td align=left valign=top>RS5</td>
  <td align=left valign=top>45</td>
  <td align=left valign=top>IACK</td>
  <td align=left valign=top>D4</td>
</tr>
<tr>
  <td align=left valign=top>8</td>
  <td align=left valign=top>SO</td>
  <td align=left valign=top>TC</td>
  <td align=left valign=top>44</td>
  <td align=left valign=top>D7</td>
  <td align=left valign=top>D3</td>
</tr>
<tr>
  <td align=left valign=top>9</td>
  <td align=left valign=top>SI</td>
  <td align=left valign=top>SO</td>
  <td align=left valign=top>43</td>
  <td align=left valign=top>D6</td>
  <td align=left valign=top>D2</td>
</tr>
<tr>
  <td align=left valign=top>10</td>
  <td align=left valign=top>RC</td>
  <td align=left valign=top>SI</td>
  <td align=left valign=top>42</td>
  <td align=left valign=top>D5</td>
  <td align=left valign=top>D1</td>
</tr>
<tr>
  <td align=left valign=top>11</td>
  <td align=left valign=top>Vcc</td>
  <td align=left valign=top>RC</td>
  <td align=left valign=top>41</td>
  <td align=left valign=top>D4</td>
  <td align=left valign=top>D0</td>
</tr>
<tr>
  <td align=left valign=top>12</td>
  <td align=left valign=top>NC</td>
  <td align=left valign=top>Vcc</td>
  <td align=left valign=top>40</td>
  <td align=left valign=top>D3</td>
  <td align=left valign=top>GND</td>
</tr>
<tr>
  <td align=left valign=top>13</td>
  <td align=left valign=top>TA 0</td>
  <td align=left valign=top>NC</td>
  <td align=left valign=top>39</td>
  <td align=left valign=top>D2</td>
  <td align=left valign=top>CLK</td>
</tr>
<tr>
  <td align=left valign=top>14</td>
  <td align=left valign=top>TB 0</td>
  <td align=left valign=top>NC</td>
  <td align=left valign=top>38</td>
  <td align=left valign=top>D1</td>
  <td align=left valign=top>IE1</td>
</tr>
<tr>
  <td align=left valign=top>15</td>
  <td align=left valign=top>TC 0</td>
  <td align=left valign=top>TAO</td>
  <td align=left valign=top>37</td>
  <td align=left valign=top>D0</td>
  <td align=left valign=top>IE0</td>
</tr>
<tr>
  <td align=left valign=top>16</td>
  <td align=left valign=top>TD 0</td>
  <td align=left valign=top>TBO</td>
  <td align=left valign=top>36</td>
  <td align=left valign=top>Vss</td>
  <td align=left valign=top>IRQ</td>
</tr>
<tr>
  <td align=left valign=top>17</td>
  <td align=left valign=top>XTAL 1</td>
  <td align=left valign=top>TCO</td>
  <td align=left valign=top>35</td>
  <td align=left valign=top>CLK</td>
  <td align=left valign=top>NC</td>
</tr>
<tr>
  <td align=left valign=top>18</td>
  <td align=left valign=top>XTAL 2</td>
  <td align=left valign=top>TDO</td>
  <td align=left valign=top>34</td>
  <td align=left valign=top>IEI</td>
  <td align=left valign=top>NC</td>
</tr>
<tr>
  <td align=left valign=top>19</td>
  <td align=left valign=top>TA 1</td>
  <td align=left valign=top>XTAL1</td>
  <td align=left valign=top>33</td>
  <td align=left valign=top>IEO</td>
  <td align=left valign=top>NC</td>
</tr>
<tr>
  <td align=left valign=top>20</td>
  <td align=left valign=top>TB 1</td>
  <td align=left valign=top>XTAL2</td>
  <td align=left valign=top>32</td>
  <td align=left valign=top>INTR</td>
  <td align=left valign=top>IO7</td>
</tr>
<tr>
  <td align=left valign=top>21</td>
  <td align=left valign=top>RESET</td>
  <td align=left valign=top>NC</td>
  <td align=left valign=top>31</td>
  <td align=left valign=top>RR</td>
  <td align=left valign=top>IO6</td>
</tr>
<tr>
  <td align=left valign=top>22</td>
  <td align=left valign=top>I0</td>
  <td align=left valign=top>TAI</td>
  <td align=left valign=top>30</td>
  <td align=left valign=top>TR</td>
  <td align=left valign=top>IO5</td>
</tr>
<tr>
  <td align=left valign=top>23</td>
  <td align=left valign=top>I1</td>
  <td align=left valign=top>TBI</td>
  <td align=left valign=top>29</td>
  <td align=left valign=top>17</td>
  <td align=left valign=top>IO4</td>
</tr>
<tr>
  <td align=left valign=top>24</td>
  <td align=left valign=top>I2</td>
  <td align=left valign=top>Reset</td>
  <td align=left valign=top>28</td>
  <td align=left valign=top>16</td>
  <td align=left valign=top>IO3</td>
</tr>
<tr>
  <td align=left valign=top>25</td>
  <td align=left valign=top>13</td>
  <td align=left valign=top>IO0</td>
  <td align=left valign=top>26</td>
  <td align=left valign=top>14</td>
  <td align=left valign=top>IO1</td>
</tr>
<tr>
  <td align=left valign=top>26</td>
  <td align=left valign=top>14</td>
  <td align=left valign=top>IO1</td>
  <td align=left valign=top>27</td>
  <td align=left valign=top>15</td>
  <td align=left valign=top>IO2</td>
</tr>
</table></div>

<p>
<br>
<br>
</p>
<p>Kommen wir nun zu den Funktionsbaugruppen des MFP-Bausteins:
<br>Beachten Sie bitte das die Beschreibung vom ST auf den MFP des
Falcons nicht immer zu 100% &uuml;bereinstimmt.
<br>
</p>
<dl>
<dt><b>GND,Vcc,CLK</b></dt><dd>
<br>&nbsp;
<br>An GND und Vcc wird der Baustein mit der Betriebsspannung
versorgt, der Pin CLK dient dazu den Baustein mit dem Systemtakt zu
versorgen (4Mhz)
<br>&nbsp;
<dt><b>DO-D7,CS,DS,DTACK,RS1-RS5,RESET</b></dt><dd>
<br>&nbsp;
<br>D0-D7 verbindet den MFP mit dem 8-Bit Datenbus CS-Chipselekt /
DS-Datastrobe / DTACK-Data Transfer Acknowledge / RS1-RS5 Register
Select / RESET.
<br>&nbsp;
<br>Das Restet Signal mu&szlig; 2uS stabil Anliegen um den MFP in
einen definierten Grundzustand zu versetzen.
<br>&nbsp;
<br>Die n&auml;chste und wichtige Gruppe sind die
Interruptanschl&uuml;sse. IRQ-Interrupt ReQuest / IACK-Interrupt
ACKnowledge / IEI,IEO-Interrupt Enable In/Out
<br>Der Anschluss IRQ wird LOW wenn ein Ereigniss innerhalb des MFP
einen Interrupt ausgel&ouml;st hat. Es wird dann dem Prozessor mittels
diesem Anschluss ein Interrupt signalisiert.
<br>&nbsp;
<dt><b>IACK</b></dt><dd>
<br>&nbsp;
<br>Legt bei LOW an IRQ u.IEI einen Interruptvector auf die
Datenleitungen. Jede der 16 Interruptquellen kann einen eigenen Vector
liefern, so da&szlig; die Behandlung dessen f&uuml;r den Prozessor
wesentlich vereinfacht und somit beschleunigt wird.
<br>&nbsp;
<dt><b>IEI,IEO</b></dt><dd>
<br>&nbsp;
<br>An diesen Pin's k&ouml;nnen mehre MFP's untereinander Verkettet
werden. Was aber im Atari nicht der Fall ist. Betrifft auch nur den
ST.
<br>&nbsp;
<dt><b>IO0 - IO7</b></dt><dd>
<br>&nbsp;
<br>Man kann diese Leitungen als normale Ein od. Ausgabeleitungen
verwenden. Die Datenrichtung ist mittels der Portbits frei
einstellbar, zus&auml;tzlich kann jedes Portbit als Interrupteingang
programmiert werden. Mit den internen Registern k&ouml;nnen f&uuml;r
jedes Bit getrennt die Flanke des ausl&ouml;senden Signals eingestellt
werden.
<br>&nbsp;
<dt><b>XTAL1 und XTAL2</b></dt><dd>
<br>&nbsp;
<br>Timer Quarz
<br>
<br>&nbsp;
<br>An diesen Pin k&ouml;nnen f&uuml;r die internen Timer ein Quarz
angeschlossen werden, welcher die Arbeitsfrequenz der internen Timer
festlegt
<br>&nbsp;
<dt><b>TA0,TB0,TC0,TD0</b></dt><dd>
<br>&nbsp;
<br>Timer Ausgang
<br>
<br>&nbsp;
<br>Die vier internen Timer verf&uuml;gen jeder &uuml;ber einen
eigenen Ausgang, an dem der Pegel wechselt wenn der Timer den
Z&auml;hlerstand von 01 nach 00 wechselt. Die Z&auml;hler arbeiten nur
als Abw&auml;rtsz&auml;hler !
<br>&nbsp;
<dt><b>SI, SO</b></dt><dd>
<br>&nbsp;
<br>serieller Eingang, serieller Ausgang
<br>&nbsp;
<dt><b>RC,TC</b></dt><dd>
<br>&nbsp;
<br>Receive Clock, Transmit Clock
<br>Die &Uuml;bertragungsgeschwindigkeit der Sende/Empfangsdaten wird
durch die an diesen Pin liegende Frequenz bestimmt.
<br>&nbsp;
<dt><b>RR,TR</b></dt><dd>
<br>&nbsp;
<br>Receiver Ready,Transmitter Ready
<br>Finden im Atari ST und im Falcon keine Verwendung.
<br>&nbsp;
<dt><b>Reg 1 GPIP</b></dt><dd>
<br>&nbsp;
<br>General Purpose I/O Interrupt Port
<br>
<br>&nbsp;
<br>Datenregister des 8 Bit Ports, mit dieser Adresse werden die Daten
an die Portbits geschrieben / gelesen.
<br>&nbsp;
<dt><b>Reg 2 AER</b></dt><dd>
<br>&nbsp;
<br>Active Edge Register
<br>
<br>&nbsp;
<br>Falls die Portbits als Interrupteingang benutzt werden,wird mit
diesem Register festgelegt ob der Interrupt bei LOW od. HIGH Pegel
ausgel&ouml;st wird.
<br>&nbsp;
<dt><b>Reg 3 Data</b></dt><dd>
<br>&nbsp;
<br>Direction Register
<br>
<br>&nbsp;
<br>Dieses Register legt die Datenrichtung eines jeden Portbits fest.
Eine 0 bedeutet dabei &quot;Eingang&quot; eine 1 hingegen ein
&quot;Ausgang&quot;.
<br>&nbsp;
<dt><b>Reg 4,5</b></dt><dd>
<br>&nbsp;
<br>IERA,IERB Interrupt Enable Register
<br>
<br>&nbsp;
<br>Jede Interruptquelle kann hier separat Ein bzw. Ausgeschaltet
werden. Eine Interruptquelle an einem Ausgeschaltetem Kanal wird vom
MFP komplett ignoriert.
<br>&nbsp;
<dt><b>IERA</b></dt><dd>
<br>&nbsp;
<br>Bit 7 I/O Port Bit 7, h&ouml;chste Stufe
<br>Bit 6 I/O Port Bit 6
<br>Bit 5 Timer A
<br>Bit 4 Empf&auml;nger Buffer voll
<br>Bit 3 Empf&auml;nger Fehler
<br>Bit 2 Sender Buffer voll
<br>Bit 1 Sender Fehler
<br>Bit 0 Timer B
<br>
<br>&nbsp;
<dt><b>IERB</b></dt><dd>
<br>&nbsp;
<br>Bit 7 I/O Port Bit 5
<br>Bit 6 I/O Port Bit 4
<br>Bit 5 Timer C
<br>Bit 4 Timer D
<br>Bit 3 I/O Port Bit 3
<br>Bit 2 I/O Port Bit 2
<br>Bit 1 I/O Port Bit 1
<br>Bit 0 I/O Port Bit 0, niedriegste Stufe
<br>
<br>&nbsp;
<br>Diese Zuordnung findet auch Anwendung bei den IP,IM,u.IS
Registern.
<br>&nbsp;
<dt><b>Reg 6,7</b></dt><dd>
<br>&nbsp;
<br>IPRA,IPRB Interrupt Pending Register
<br>
<br>&nbsp;
<br>Wenn bei einem eingeschaltetem Kanal ein Interrupt auftritt, wird
das dem Kanal zugeordnete Bit im IPRA, IPRB Register auf &quot;1&quot;
gesetzt. Wenn das System gebrauch von der Vektor-Erzeugung macht, wird
das entsprechende Bit automatisch wieder gel&ouml;scht, sobald der MFP
die Vektornummer auf den Bus legt. Wenn das System von dieser
m&ouml;glichkeit keinen Gebrauch macht, mu&szlig; das IPR-Register
Softwarem&auml;ssig gel&ouml;scht werden. Zu diesem Zweck ist ein Byte
an den MFP zu schicken in dem alle Bits bis auf das zu l&ouml;schende
gesetzt sind.
<br>&nbsp;
<dt><b>Reg 8,9</b></dt><dd>
<br>&nbsp;
<br>ISRA,ISRB Interrupt In-Service Register
<br>
<br>&nbsp;
<br>Die Funktion dieser Register h&auml;ngen vom Bit 3 des Registers
12 ab. Dieses &quot;S&quot;-Bit bestimmt ob der MFP im Software
End-of-Interruptmodus (SEI) oder im Automatic End-of-Interruptmodus
(AEI) arbeitet. Im AEI Modus wird das IPR-Bit gel&ouml;scht,sobald der
Prozessor w&auml;hrend eines IACK-Zyklus die Vektornummer auf dem Bus
abholt. Auch das zugeh&ouml;rige In-Service Bit wird zu diesem
Zeitpunkt gel&ouml;scht. Danach k&ouml;nnen erneute Ereignisse
(Interrupts) auftreten. Im SEI-Modus dagegen wird das entsprechende
ISR-Bit gesetzt,wenn die Vektornummer des Interrupts, vom Prozessor
angefordert wird. Am Ende der Interruptroutine mu&szlig; das Bit
gel&ouml;scht werden, in dem ein Byte in dem alle Bits bis auf das zu
l&ouml;schende gesetzt sind, an den MFP geschickt wird. Wenn das
Sevice In-Bit gesetzt ist, sind alle Interrupts niedriger Stufe im MFP
ausmaskiert Da das IPR Bit des aktiven Kanals mit der &uuml;bergabe
der Vektornummer gel&ouml;scht wurde, kann jetzt ein gleichartiger
Interrupt sofort wieder auftreten. Allerdings werden dieser u.
niedrigere Interrupts erst wieder bearbeitet (l&ouml;sen IRQ aus) wenn
das gesetzte Service-In Bit gel&ouml;scht wird.
<br>&nbsp;
<dt><b>Reg 10,11</b></dt><dd>
<br>&nbsp;
<br>IMRA,IMRB Interrupt Mask Register
<br>
<br>&nbsp;
<br>Mit diesem Register k&ouml;nnen einzelne, in den IER geschaltete
Interruptquellen ausmaskiert werden. Die Ereignisse werden dann zwar
erkannt und dem IPR signalisiert, die IRQ-Leitung bleibt aber auf
High-Pegel.
<br>&nbsp;
<dt><b>Reg 12</b></dt><dd>
<br>&nbsp;
<br>VR Vektor Register
<br>
<br>&nbsp;
<br>Im Fall eines Ereigniss kann der MFP auf die Anforderung des
Prozessors im Interrupt-Acknowledge Zyklus eine der Ereigniss-Quellen
entspechende Vektornummer generieren. Jeder der 8 (16) Kan&auml;le
verf&uuml;gt &uuml;ber seinen eigenen Vektor. Die 8 (16) Kan&auml;le
werden entsprechend der Priorit&auml;t in den unteren 4 Bits der
Vektornummer codiert,die oberen 4 Bits des Vektors werden aus dem VR
Vektorregister kopiert. Dazu m&uuml;ssen diese Bits im VR gesetzt
sein. Das Bit 3 des VR ist das schon erl&auml;uterte S-Bit, welches
&uuml;ber die beiden Arbeitsmodi des MFP entscheidet.
<br>&nbsp;
<dt><b>Reg 13,14</b></dt><dd>
<br>&nbsp;
<br>TACR,TBCR Timer A/B Contoll Register
<br>
<br>&nbsp;
<br>Die internen Timer A und B verf&uuml;gen &uuml;ber die gleichen
M&ouml;glichkeiten. Sie bestehen aus je einem Datenregister, einem
programmierbaren Vorteiler und einem 8-bit Abw&auml;rtsz&auml;hler.
Der Inhalt des Z&auml;hlers wird bei jedem Impuls, der vom Vorteiler
geliefert wird um eins verringert. Wenn der Z&auml;hler auf 01 steht,
wechselt er beim n&auml;chsten Impuls am zugeh&ouml;rigen Ausgang
seinen Pegel. Zugleich wird der Timer mit dem Wert des
Timer-Datenregisters geladen. Ist bei diesem Kanal das IER-Bit
gesetzt, wird ausserdem ein Interrupt ausgel&ouml;st. Als Quelle des
Z&auml;hlertaktes wird &uuml;blicherweise die Frquenz genommen, die
als Quarz an den Anschl&uuml;ssen XTAL1/XTAL2 anliegt, diese Frequenz
wird auch als Delay-Mode bezeichnet. Das selbe trifft auch f&uuml;r
die Timer C und D zu. Doch k&ouml;nnen auch bei den Timern A und B
externe Impulse an den Timer- eing&auml;ngen TAI / TBI gez&auml;hlt
werden. Das wird dann als Event-Count-Mode bezeichnet. Beim
z&auml;hlen externer Impulse wird der Vorteiler abgeschaltet, um
wirklich jeden ankommenden Impuls exakt z&auml;hlen zu k&ouml;nnen.
Die Maximale Z&auml;hlfrequenz darf 1Mhz nicht &uuml;berschreiten, was
einem viertel der Betriebsfrequenz des MFP entspricht. Eine weitere
Besonderheit dieser Betriebsart ist das, die Timer-Eing&auml;nge den
Interrupts der I/O-Anschl&uuml;sse I3/I4 zugeordnet sind. Je nach
Programmierung der entsprechenden Bit's im Active Edge Register kann
durch einen Pegelsprung an den Timereing&auml;ngen ein Interrupt
ausgel&ouml;st werden. TAI ist I4,TBI ist I3 zugeordnet,I3 und I4
k&ouml;nnen dabei jedoch immer noch als I/O-Anschl&uuml;sse ohne
Interrupt benutzt werden. Timer A/B haben noch eine dritte
Betriebsart, die man Pulsweitenmessung nennt. Diese Betriebsart
&auml;hnelt dem Delay-Mode,als unterschied ist zu erkennen das mittels
der Timereing&auml;nge TAI /TBI die Timer ein/aus geschaltet werden
k&ouml;nnen. Auch bei dieser Betriebsart werden die AER-Bit's von
I3/I4 benutzt,um festzulegen ob die Timer bei High oder Low-Pegel an
den Timereing&auml;ngen arbeiten d&uuml;rfen. Wenn z.B das AER-Bit 4
gesetzt ist,arbeitet der Z&auml;hler,wenn TAI High ist. Wechselt TAI
von High nach Low, so wird ein Interrupt erzeugt, vorrausgesetzt, der
Interrupt des I4-Kanal's ist zugelassen.
<br>&nbsp;
<br>Die Programmierung von TACR und TBCR.
<br>In diesen beiden Registern werden nur f&uuml;nf der acht
m&ouml;glichen Bits genutzt. Die Bits 0 bis 3 bestimmen die
Betriebsart des entsprechenden Timers nach der Tabelle:
<br>&nbsp;
<br>Bit 3 2 1 0 Funktion
<br>-----------
<br>Bit 0 0 0 0 Timer Stop ,Keine Funktion
<br>Bit 0 0 0 1 Delay Modus ,Vorteiler teilt durch 4
<br>Bit 0 0 1 0 &quot; &quot; , &quot; &quot; &quot; 10
<br>Bit 0 0 1 1 &quot; &quot; &quot; &quot; &quot; 16
<br>Bit 0 1 0 0 &quot; &quot; &quot; &quot; &quot; 50
<br>Bit 0 1 0 1 &quot; &quot; &quot; &quot; &quot; 64
<br>Bit 0 1 1 0 &quot; &quot; &quot; &quot; &quot; 100
<br>Bit 0 1 1 1 &quot; &quot; &quot; &quot; &quot; 200
<br>Bit 1 0 0 0 Event Count Mode,
<br>Bit 1 0 0 1 Pulsweiten Mode , Vorteiler teilt durch 4
<br>Bit 1 0 1 0 &quot; &quot; &quot; &quot; &quot; 10
<br>Bit 1 0 1 1 &quot; &quot; &quot; &quot; &quot; 16
<br>Bit 1 1 0 0 &quot; &quot; &quot; &quot; &quot; 50
<br>Bit 1 1 0 1 &quot; &quot; &quot; &quot; &quot; 64
<br>Bit 1 1 1 0 &quot; &quot; &quot; &quot; &quot; 100
<br>Bit 1 1 1 1 &quot; &quot; &quot; &quot; &quot; 200
<br>
<br>&nbsp;
<dt><b>Reg 15</b></dt><dd>
<br>&nbsp;
<br>TCDCR Timer C und D Controll Register
<br>
<br>&nbsp;
<br>Bit 2 1 0 Funktion Timer D
<br>Bit 6 5 4 Funktion Timer C
<br>-----------
<br>Bit 0 0 0 Timer Stop , Keine Funktion
<br>Bit 0 0 1 Delay Modus, Vorteiler teilt durch 4
<br>Bit 0 1 0 &quot; &quot; &quot; &quot; &quot; 10
<br>Bit 0 1 1 &quot; &quot; &quot; &quot; &quot; 16
<br>Bit 1 0 0 &quot; &quot; &quot; &quot; &quot; 50
<br>Bit 1 0 1 &quot; &quot; &quot; &quot; &quot; 64
<br>Bit 1 1 0 &quot; &quot; &quot; &quot; &quot; 100
<br>Bit 1 1 1 &quot; &quot; &quot; &quot; &quot; 200
<br>
<br>&nbsp;
<br>Die Bits 3 u.7 in diesem Register haben keine Funktion.
<br>
<br>&nbsp;
<dt><b>Reg 16-19</b></dt><dd>
<br>&nbsp;
<br>TADR,TBDR,TCDR,TDDR Timer Data Register
<br>
<br>&nbsp;
<br>Die Timer Datenregister werden mit dem Wert programmiert der in
den Z&auml;hler geladen wird wenn er nach erreichen des
Z&auml;hlerstandes 01 einen Impuls bekommt. Von diesem Wert aus wird
dann kontinuierlich abw&auml;rts gez&auml;hlt.
<br>&nbsp;
<dt><b>Reg 20</b></dt><dd>
<br>&nbsp;
<br>SCR Syncron Character Register
<br>
<br>&nbsp;
<br>In diesem Register wird bei einer synchronen Daten&uuml;bertragung
ein Wert geschrieben der beim Empfang den beginn der Daten
kennzeichnet. Anschliessend werden alle Daten mit diesem Wert
verglichen und nach &uuml;bereinstimmung in den Datenbuffer
&uuml;bertragen.
<br>&nbsp;
<dt><b>Reg 21</b></dt><dd>
<br>&nbsp;
<br>UCR,USART Controll Register
<br>
<br>&nbsp;
<br>Mit diesem Register werden alle Parameter der Schnittstelle
eingestellt. Ausgenommen der Baudrate.
<br>
<br>&nbsp;
<br>Bit 0 : nicht benutzt
<br>Bit 1 : 0 parity odd
<br>Bit 1 : 1 &quot; even
<br>
<br>&nbsp;
<br>Bit 2 : 0 keine parity (Bit 1 wird ignoriert)
<br>Bit 2 : 1 parity entsprechend Bit 1
<br>
<br>&nbsp;
<br>Bit 3,4: diese Bits bestimmen Start u. Stoppbits und das
gew&uuml;nschte Format.
<br>Bit 4 3 Start Stop Format
<br>Bit 0 0 0 0 Syncron
<br>Bit 0 1 1 1 Asyncron
<br>Bit 1 0 1 1,5 &quot;
<br>Bit 1 1 1 2 &quot;
<br>
<br>&nbsp;
<br>Bit 5,6: geben die Anzahl der zu &uuml;bertragenen Datenbits an.
<br>
<br>&nbsp;
<br>Bit 6 5 Wortl&auml;nge
<br>Bit 0 0 8 Bits
<br>Bit 0 1 7 &quot;
<br>Bit 1 0 6 &quot;
<br>Bit 1 1 5 &quot;
<br>
<br>&nbsp;
<br>Bit 7 : 0 = Frequenz an TC u. RC wird Direkt als
&Uuml;bertragungsfrequenz benutzt.
<br>Bit 7 : 1 = Frequenz wird intern durch 16 geteilt.
<br>
<br>&nbsp;
<dt><b>Reg 22</b></dt><dd>
<br>&nbsp;
<br>RSR Receiver Status Register
<br>
<br>&nbsp;
<br>Bit 0 Receiver Enable Bit
<br>
<br>&nbsp;
<br>Wenn dieses Bit gel&ouml;scht wird ist der Empfangsteil sofort
ausgeschaltet. Alle Flags im RSR werden automatisch gel&ouml;scht.
Wird das Bit wieder gesetzt arbeitet der Empf&auml;nger normal weiter.
<br>&nbsp;
<br>Bit 1 Syncronous Strip Enable
<br>
<br>&nbsp;
<br>Mit diesem Bit kann bei einem synchronem Datentransfer bestimmt
werden ob ein mit dem im SCR gespeicherten identischen Zeichen in den
Receiver Buffer &uuml;bertragen wird oder nicht.
<br>&nbsp;
<br>Bit 2 Match/Character In Progress
<br>
<br>&nbsp;
<br>Im synchronen &Uuml;bertragungsmodus wird mit diesem Bit angezeigt
da&szlig; ein mit dem SCR-Byte identisches Zeichen empfangen wurde. Im
asynchronen Modus wird dieses Bit gesetzt sobald das Startbit erkannt
wurde. Mit dem eintreffen des Stopbits wird das Flag sofort wieder
gel&ouml;scht.
<br>&nbsp;
<br>Bit 3 Found-Search/Break Detected
<br>
<br>&nbsp;
<br>Bit 3 im RSR zeigt an ob ein empfangenes Zeichen im synchon Modus
mit dem Zeichen in SCR &uuml;bereinstimmt. Diese Bedingung kann
&uuml;ber den Receiver Error Kanal einen Interrupt ausl&ouml;sen. In
der asynchronen Betriebsart wird das Bit gesetzt sobald ein Break
empfangen wird, die Break-Bedingung wir dann nur erf&uuml;llt wenn
nach dem Startbit nur Nullen empfangen werden. Zur Unterscheidung
zwischen einem Break und einer 'echten null' mu&szlig; die
Empf&auml;ngerleitung auch in der Zeit des Stop-Bits auf Low bleiben.
<br>&nbsp;
<br>Bit 4 Frame Error
<br>
<br>&nbsp;
<br>Ein Frame Error taucht auf wenn ein Byte empfangen wird das nicht
Null ist, dessen Stopbit aber eine Null ist.
<br>
<br>&nbsp;
<br>Bit 5 Parity Error
<br>
<br>&nbsp;
<br>Dieses Bit gibt an ob auch das letzte empfangene Zeichen den
Anforderungen der Parit&auml;t gerecht wurde. Wenn die
Parit&auml;tspr&uuml;fung beim Empfang ausgeschaltet wurde wird das
Bit 5 nicht beeinflusst.
<br>
<br>&nbsp;
<br>Bit 6 Overrun Error
<br>
<br>&nbsp;
<br>Das Bit 6 zeigt an das ein vollst&auml;ndiges Zeichen im Empfangs-
schieberegister bereit liegt, das zuvor empfangene Zeichen aber noch
nicht aus dem Empf&auml;ngerbuffer ausgelesen wurde. Dieser Fehler
kann einen Interrupt ausl&ouml;sen.
<br>
<br>&nbsp;
<br>Bit 7 Buffer Full
<br>
<br>&nbsp;
<br>Bit 7 wird gesetzt sobald, ein fertiges Zeichen aus dem
Schieberegister in den Empf&auml;ngerbuffer &uuml;bertragen wird.
Sobald der Prozessor das Byte ausliest wird das Bit gel&ouml;scht.
<br>&nbsp;
<dt><b>Reg 23</b></dt><dd>
<br>&nbsp;
<br>TSR Transmitter Status Register
<br>
<br>&nbsp;
<br>Bit 0 Transmitter Enable
<br>
<br>&nbsp;
<br>Wenn dieses Bit gel&ouml;scht wird,ist der Sendteil
vollst&auml;ndig abgeschaltet.Das End-Bit wird gel&ouml;scht und das
UE-Bit wird gesetzt.
<br>
<br>&nbsp;
<br>Bit 1,2 High, Low-Bit
<br>
<br>&nbsp;
<br>Mit diesen beiden Bits kann der Zustand des abgeschalteten
Senderausgangs beeinflusst werden,wenn beide Bits gel&ouml;scht sind
wird der Ausgang hochohmig. Wird das L-Bit gesetzt ist der Ausgang
Low. Im Gegenzug, also bei gesetztem H-Bit wird der Ausgang High. In
dem Falle das beide Bits gesetzt werden wird der Senderausgang mit dem
Empf&auml;ngereingang intern (Loop-Back-Modus)verbunden. Der Ausgang
selber liegt dann auf High-Pegel.
<br>
<br>&nbsp;
<br>Bit 3 Break
<br>
<br>&nbsp;
<br>Bit 3 hat im Synchron-Modus keine Bedeutung. Im
Asynchronen-Betrieb wird wenn das Bit gesetzt wird die Break Bedingung
ausgesendet.
<br>
<br>&nbsp;
<br>Bit 4 End of Transmitt
<br>
<br>&nbsp;
<br>Wird der Sendeteil w&auml;hrend der laufenden &Uuml;bertragung
ausgeschaltet so wird das End-Bit gesetzt nachdem das aktuelle Zeichen
vollst&auml;ndig gesendet wurde. Wird zum Zeitpunkt des Abschaltens
gerade kein Zeichen gesendet wird das End-Bit sofort gesetzt.
<br>
<br>&nbsp;
<br>Bit 5 Auto Turnaround
<br>
<br>&nbsp;
<br>Ist das Bit 5 gesetzt wird der Empf&auml;nger automatisch
eingeschaltet wenn der Sender das letzte Zeichen vollst&auml;ndig
gesendet hat.
<br>&nbsp;
<br>Bit 6 Underun Error
<br>
<br>&nbsp;
<br>Dieses Bit wird gesetzt wenn ein im Sendeschieberegister
enthaltenes Zeichen komplett gesendet wurde, bevor ein neues Zeichen
in den Sendebuffer geschrieben wurde.
<br>
<br>&nbsp;
<br>Bit 7 Buffer Empty
<br>
<br>&nbsp;
<br>Wird gesetzt, wenn ein Zeichen aus dem Senderbuffer in das
Schieberegister &uuml;bertragen wird. Das Bit wird gel&ouml;scht, wenn
neue Daten in den Sendebuffer gelangen.
<br>
<br>&nbsp;
<dt><b>Reg 24</b></dt><dd>
<br>&nbsp;
<br>UDR,USART Data Register
<br>
<br>&nbsp;
<br>In diesem Register werden Sende/Empfangsdaten &uuml;bertragen.
Beim hineinschreiben gelangen die Daten in den Sendebuffer und beim
Auslesen kommen sie automatisch aus dem Empfangsbuffer.
<br>
<br>&nbsp;
</dl>
<p>
<br>
</p>
<p>A smal english description of the MFP Chip follows.
<br>
</p>
<div align=center><tt> MC68901 Multi-Function Peripheral Chip
<br>
</div>
<div align=center>Jeff Rigby/SOTA Computers </tt>
<br>
</div>
<p>The 68901 is a very inexpensive very powerful multi-function chip.
In the ST it is responsible for the interrupt generation of the busy
line on the printer port, the interrupt signal from the hard drive
port and the prin- ter port, Midi port, keyboard, and RS-232 port as
well as the entire RS - 232 receive, transmit and controll lines (16
levels of interrupt ). In ad- dition, the MFP can be daisy chained ( a
second 68901 can be added allo - wing the interrupt levels to be
chained ). All this in a chip with a re - tail cost of about $12.00.
<br>
</p>
<p>How it works; the 68000 CPU has 7 levels of interrupt, one of
those levels points to the 68901 MFP, when the CPU is told that the
MFP needs servi - ceing, the address of the service routine is given
controll, it addresses $fffffa00 which the glue chip decodes and sends
a low on the chip select pin 48 of the MFP, then the routine sends an
address to the lower 5 lines of the address bus to select a register
in the MFP and the routine, depen- ding on what it needs to do writes
or reads the registers in the chip.
<br>
</p>
<p>The operating system has previously set the interrupt registers in
the MFP with the priorities the Interrupt lines I0-I7 and the internal
receive and transmit buffers require. The 68901 then talks directly to
the 68000 tel - ling it that one of it's interrupt's needs servicing,
giving the vector adress of the service routine, and this goes on
until all the 68901 inter- rupts are serviced then control is passed
back to the 68000 and the pro - cess starts all over again. If no
interrupts need servicing then control is passed back to the 68000
immediately.
<br>
</p>
<p>I'll try to make this as non-technical as possible.
<br>
</p>
<p>MFP tells the Glue chip that it needs servicing. Glue thinks and
says OK, I guess it is your turn. Glue tells CPU that a IRQ level is
pending. CPU to Glue &quot; what level is it &quot;. CPU to Glue tell
the MFP it's his turn. Glue tells MFP to go ahead -&gt; CS on MFP goes
low MFP gives the CPU the vector for the needed routine The routine
services the MFP and clears the Interrupt register. Control is passed
back to the CPU and the next level down interrupt has a chance.
<br>
</p>
<p>Maybe that was too simple, the 68901 does alot more than that and
I could spend all day and 30 screens to tell you about it.
<br>
</p>
<p>Literature is available from Motorola on the MC68901, I believe
the 28 pa- ge technical booklet is #ADI-984, The great thing is that
we can add a se- cond RS-232 very cheaply by daisy chaining the IEI
and IEO pins on the 68901 and changing the vector addresses for the
service routines.
<br>
</p>
<p>A few suggestions for standards in the ST upgrades.
<br>
</p>
<dl>
<dt><b>1)</b></dt><dd> The output pin in the video out port be used for Monitor
switching (Mo no to Color).
<br>
<br>&nbsp;
<dt><b>2)</b></dt><dd> Pin 25 I3 of the 68901 MFP be used for an interrupt to tell
software
<br>that the power has been interrupted. In battery backups in the
1040 all
<br>power 12v and 5V can be provided for 10 min with C cell Ni-Cad.
The
<br>software has to be informed that power is out and to save the
data.
<br>
<br>&nbsp;
<br>Suggest a low for power interrupt on pin 25.
<br>
<br>&nbsp;
<dt><b>3)</b></dt><dd> Address $fffffb00 be used for a second 68901 MFP and the second
MFP be
<br>daisy chained using the IEO and IEI pins.
<br>
<br>&nbsp;
<dt><b>4)</b></dt><dd> An address for battery backup clocks be picked as standard. I
don't ha-
<br>ve any thoughts on this one but an address should be suggested.
Anyone
<br>have an address that is already being used for this purpose and
the
<br>reason it was chosen please respond.
<br>
<br>&nbsp;
</dl>
<p>As a hardware hacker, I am interested in other people's input on
this sub- ject. The great thing about PD software is that people build
upon the work of others and eventually the PD software can be better
than commercial software. I would like to see something like that
started on the technical side, if someone finds a flaw or a better way
to describe the 68901 please add it to this file and upload to CIS.
<br>
</p>
<p>Jeff Rigby/SOTA Computers
<br>3949 Sawyer Road
<br>SARASOTA, FL. 33583 (USA)
<br>
<br>
<br>
</p>
<p align=center><img src="image/sline.gif" border=0 width="640" height="2"></p><br>
<p align=center><img src="image/img.gif" border=0 width="50" height="40"></p><br>

<hr>
<address>Copyright &copy; <a href="http://www.doitarchive.de">Robert Schaffner</a> (<a href="mailto:support@doitarchive.de">support@doitarchive.de</a>)<br>
Letzte Aktualisierung am 23. Dezember 2003</address>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="0401.htm" target="UDOcon"><img src="udo_up.gif" alt="Falcon Custom Chip" border=0 width="24" height="24"></a>
<a href="040103.htm" target="UDOcon"><img src="udo_lf.gif" alt="VIDEL Chip" border=0 width="24" height="24"></a>
<a href="040105.htm" target="UDOcon"><img src="udo_rg.gif" alt="DSP Chip" border=0 width="24" height="24"></a>
</td></tr></table>
</body></html>
