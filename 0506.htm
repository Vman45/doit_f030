<!DOCTYPE html>

<html>
<head>
<title>
DOITF030 - Tips u. Tricks zum Atari Falcon F030: Hardware Scroll
</title>
<meta charset="utf-8">
<meta name="Email" content="support@doitarchive.de">
<link rev=made href="mailto:support@doitarchive.de" title="E-Mail">
<link rel=home href="index.html" title="Homepage">
<link href="styles/style.css" rel="stylesheet">
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" alink="#FF0000" vlink="#800080">

<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="05.htm" target="UDOcon"><img src="udo_up.gif" alt="Falcon F030 Register" border=0 width="24" height="24"></a>
<a href="0505.htm" target="UDOcon"><img src="udo_lf.gif" alt="Audio - Register" border=0 width="24" height="24"></a>
<a href="06.htm" target="UDOcon"><img src="udo_rg.gif" alt="Verschiedene Laufwerke am Falcon F030" border=0 width="24" height="24"></a>
</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr>
<td valign=top width="8">&nbsp;</td><td valign=top width="100%">
<h1><a name="Hardware_20Scroll">5.6 Hardware Scroll</a></h1>
<p align=center><img src="image/line.gif" border=0 width="637" height="6"></p><br>
<p><tt> <a href="0305.htm" target="UDOcon">Hardware</a> Scrolling </tt>
<br>
<br>
</p>
<p><img src="image/english.gif" border=0 width="35" height="22"></p><br>
<p>The following text describe techniques to do continuous hardware
scroll with STe and FALCON machines. This technique make the scroll in
very little time.
<br>
</p>
<p>With continuous I mean, scroll like to XENON or IMPOSSAMOLE but
fine.
</p>
<p>Is very possible that ZOOL and ENCHANTED LAND uses such
techniques.
<br>
</p>
<p>You must know how make normal hardware scroll (you must know
exactly how control $FF820F and $FF8265 registers), ok?.
<br>
</p>
<p>To make horizontal scroll one pixel for every VBL at the left
direction, make the following passes:
<br>
</p>
<p>
<br>
</p>
<p>1) Define two contiguous screens (320X200 and 320X200)
($FF820F=80)
</p>
<pre>   0                         319 |0                          319
   ------------------------------|------------------------------
0  |                             |                             |
   |                             |                             |
   |           main              |          secondary          |
   |                             |                             |
   |          screen             |           screen            |
   |                             |                             |
   |                             |                             |
   |                             |                             |
199------------------------------|------------------------------

</pre>
<p>
<br>
</p>
<p>2) Now you must write some graphics at right border in secondary
screen. 16 bit wide for example:
</p>
<pre>
0                         319 |0     15                   319
------------------------------|------------------------------
|                             |       |                     |
|                             | extra |                     |
|                             |       |                     |
|                             |graphic|                     |
|                             |       |                     |
|                             |       |                     |
|                             |       |                     |
|                             |       |                     |
------------------------------|------------------------------
^----current visible window---^

</pre>
<p>
<br>
</p>
<p>3) On the first VBL it's necessary to scroll one pixel ($FF8265=1)
<br>4) On the second VBL it's necessary to scroll another pixel
($FF8265=2)
<br>5) On the thirt VBL it's necessary to scroll another pixel
($FF8265=3)
<br>6) On the fourth VBL it's necessary to scroll another pixel
($FF8265=4)
<br>7) On the fifth VBL it's necessary to scroll another pixel
($FF8265=5)
<br>8) On the sixth VBL it's necessary to scroll another pixel
($FF8265=6)
<br>9) On the seventh VBL it's necessary to scroll another
pixel($FF8265=7)
<br>10) On the eighth VBL it's necessary to scroll another pixel
($FF8265=8)
<br>11) On the ninth VBL it's necessary to scroll another pixel
($FF8265=9)
<br>12) On the tenth VBL it's necessary to scroll another pixel
($FF8265=10)
<br>13) On the 11 VBL it's necessary to scroll another pixel
($FF8265=11)
<br>14) On the 12 VBL it's necessary to scroll another pixel
($FF8265=12)
<br>15) On the 13 VBL it's necessary to scroll another pixel
($FF8265=13)
<br>16) On the 14 VBL it's necessary to scroll another pixel
($FF8265=14)
<br>17) On the 15 VBL it's necessary to scroll another pixel
($FF8265=15)
<br>18) On the 16 VBL, add 8 bytes (four planes) to main screen
pointers ($FF8205,7 and 9), set $FF820F to 80 and $FF8265 to 0.
<br>
</p>
<p>19) Now it's necessary copy the 1600 bytes (8 bytes for every
plane * 200 lines=1600 bytes) of the new graphics zone to old graphics
zone screen (the left zone):
<br>
</p>
<pre>
    |&lt;&lt;&lt;&lt;&lt;copy byte here&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;|
    |                             |
0     15                  319 |0     15                   319
------------------------------|------------------------------
|      |                      |       |                     |
|      |                      |       |                     |
| old  |                      | new   |                     |
|      |                      |       |                     |
| zone |                      |graphic|                     |
|      |                      |       |                     |
|screen|                      |       |                     |
|      |                      |       |                     |
------------------------------|------------------------------
       ^----current visible window----^

</pre>
<p>
<br>Now you must write another extra graphics on secondary screen,
into bits 16 to 31 of every line.
<br>
</p>
<pre>

0     15                  319 |0     15      31           319
------------------------------|------------------------------
|      |                      |       |  new  |             |
|      |                      |       |       |             |
| old  |                      |       | extra |             |
|      |                      |       |       |             |
| zone |                      |       |graphic|             |
|      |                      |       |       |             |
|screen|                      |       |       |             |
|      |                      |       |       |             |
------------------------------|------------------------------
       ^-----current visible window---^

</pre>
<p>Now control $FF8265 register in order to repeating pass 3 to 18
and another time more, copy new graphics zone to old graphics zone
(pass 19):
<br>
</p>
<pre>
           |&lt;&lt;&lt;&lt;&lt;copy byte here&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;|
           |                             |
0     15      31          319 |0     15      31           319
------------------------------|------------------------------
|      |       |              |       |  new  |             |
|      |       |              |       |       |             |
|      | old   |              |       | extra |             |
|      |       |              |       |       |             |
|      |graphic|              |       |graphic|             |
|      |       |              |       |       |             |
|      | zone  |              |       |       |             |
|      |       |              |       |       |             |
------------------------------|------------------------------
               ^----current visible window----^

</pre>
<p>
<br>
</p>
<p>The process is repeated until when the current visible window is
the secondary window and the main screen is a copy of the secondary
screen:
<br>
</p>
<pre>
0                         319 |0                          319
------------------------------|------------------------------
|                             |                             |
|   main screen is exactly    |     secondary screen is     |
|                             |                             |
|    like to the secondary    |   exactly like to main      |
|                             |                             |
|           screen            |           screen            |
|                             |                             |
|                             |                             |
------------------------------|------------------------------
                              ^----current visible window---^

</pre>
<p>
<br>
</p>
<p>At this point, you must set the main screen pointers (FF8205,7 and
9) to point to the main screen (another time more):
<br>
</p>
<pre>
0                         319 |0                          319
------------------------------|------------------------------
|                             |                             |
|                             |                             |
|                             |                             |
|                             |                             |
|                             |                             |
|                             |                             |
|                             |                             |
|                             |                             |
------------------------------|------------------------------
^----current visible window---^

</pre>
<p>
<br>
</p>
<p>How you see, only 1600 bytes is copied every 16 VBL. If the scroll
is at two pixel (more speed) for every VBL, you must copy 1600 bytes
every 8 VBL etc.ok? this is very easy!! no?
<br>
</p>
<p>Do you imagine how make the vertical scroll?.
<br>
</p>
<p>First you must make two screen one above the other one. Second you
now must copy 160 bytes every VBL from &quot;the new line&quot; to
&quot;the old line&quot;.
<br>
</p>
<p>Mixing the above techniques make possible multi-directional (8
directions) scrolling.
<br>
<br>Miguel Garc&iacute;a
<br>
</p>
<p>
<br>
<br>
</p>



<hr>

</td></tr></table>
<table border=0 cellpadding=0 cellspacing=0 width="100%"><tr><td valign=top>
<a href="00con.htm" target="UDOcon"><img src="udo_hm.gif" alt="Home" border=0 width="24" height="24"></a>
<a href="05.htm" target="UDOcon"><img src="udo_up.gif" alt="Falcon F030 Register" border=0 width="24" height="24"></a>
<a href="0505.htm" target="UDOcon"><img src="udo_lf.gif" alt="Audio - Register" border=0 width="24" height="24"></a>
<a href="06.htm" target="UDOcon"><img src="udo_rg.gif" alt="Verschiedene Laufwerke am Falcon F030" border=0 width="24" height="24"></a>
</td></tr></table>
</body></html>
